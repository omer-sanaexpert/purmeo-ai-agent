<!DOCTYPE html>
<html data-template="{{template}}" class="no-js" lang="{{ shop.locale }}">
<head>
  {%- render 'layouthub_header' -%}
  {% include "load-metafields" %}
  <meta name="google-site-verification" content="P43nm3ADnAAg8eOzH_wAAFZ7o1TE9uodHdNMF4nKWQ0" />
  <!-- Symmetry 4.9.3 -->
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width,initial-scale=1.0" />
  <meta name="theme-color" content="{{ settings.btn_col }}">
  <meta name="p:domain_verify" content="85f115fc13f3858585b42f5ea2ffe08f"/>
  <meta name="google-site-verification" content="0qoiggAQ87Cx7io3jucJgTzmVBTRogPz85pJGA3BnTM" />
  
  <!-- anti-flicker snippet (recommended)  -->
  <style>.async-hide { opacity: 0 !important} </style>
  <script>(function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
  h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
  (a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
  })(window,document.documentElement,'async-hide','dataLayer',4000,
  {'OPT-M5GZP95':true});</script>
    
    <!-- Google Tag Manager -->
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-KC4TR57');</script>
  <!-- End Google Tag Manager -->
    
  <!-- Google Tag Manager -->
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-PMTMKFK');</script>
  <!-- End Google Tag Manager -->
  
  <link rel="alternate" hreflang="de" href="https://sanaexpert.de" />
  <link rel="alternate" hreflang="es" href="https://sanaexpert.es" />
  <link rel="alternate" hreflang="it" href="https://sanaexpert.it" />

  {% if settings.favicon != blank and settings.favicon contains '.png' %}
    <link rel="shortcut icon" href="{{ settings.favicon | img_url: 'master' }}" type="image/png" />
  {% elsif settings.favicon != blank and settings.favicon contains '.ico' %}
    <link rel="shortcut icon" href="{{ settings.favicon | img_url: 'master' }}" type="image/x-icon" />
  {% endif %}

  <script>document.getElementsByTagName("html")[0].className += " js";</script>
  <script src="{{ 'util.js' | asset_url }}" async></script>
  
  <title>
    {{ page_title }}{% if current_tags %}{% assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags }}{% endif %}{% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}{% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless %}
  </title>
  
  {% if page_description %}
    <meta name="description" content="{{ page_description | escape }}" />
  {% endif %}
  <link rel="canonical" href="{{ canonical_url }}" />

  {% include 'social-meta-tags' %}

  {{ 'style-cody.css' | asset_url | stylesheet_tag }}
  {{ 'styles.scss.css' | asset_url | stylesheet_tag }}

  {{ 'https://code.jquery.com/jquery-3.3.1.min.js' | script_tag }}

  
  <script>
    window.theme = window.theme || {};
    theme.jQuery = jQuery;
    theme.money_format = {{ shop.money_format | json }};
    theme.strings = {
      previous: {{ 'general.accessibility_labels.previous' | t | json }},
      next: {{ 'general.accessibility_labels.next' | t | json }},
      addressError: {{ 'map.errors.address_error' | t | json }},
      addressNoResults: {{ 'map.errors.address_no_results' | t | json }},
      addressQueryLimit: {{ 'map.errors.address_query_limit_html' | t | json }},
      authError: {{ 'map.errors.auth_error_html' | t | json }},
      icon_labels_left: {{ 'general.icon_labels.left' | t | escape | json }},
      icon_labels_right: {{ 'general.icon_labels.right' | t | escape | json }},
      icon_labels_down: {{ 'general.icon_labels.down' | t | escape | json }},
      icon_labels_close: {{ 'general.icon_labels.close' | t | escape | json }},
      cart_terms_confirmation: {{ 'cart.terms.confirmation' | t | json }},
      products_listing_from: {{ 'products.listing.from' | t | json }},
      layout_live_search_see_all: {{ 'layout.live_search.see_all' | t | json }},
      products_variant_non_existent: {{ 'products.variant.non_existent' | t | json }},
      products_product_add_to_cart: {{ 'products.product.add_to_cart' | t | json }},
      products_variant_no_stock: {{ 'products.variant.no_stock' | t | json }},
      products_variant_non_existent: {{ 'products.variant.non_existent' | t | json }},
      products_variant_unit_price_separator: {{ 'products.variant.unit_price_separator' | t | json }},
      general_navigation_menu_toggle_aria_label: {{ 'general.navigation.menu_toggle_aria_label' | t | json }},
      products_added_notification_title: {{ 'products.added_notification.title' | t | json }},
      products_added_notification_item: {{ 'products.added_notification.item' | t | json }},
      products_added_notification_quantity: {{ 'products.added_notification.quantity' | t | json }},
      products_added_notification_unit_price: {{ 'products.added_notification.unit_price' | t | json }},
      products_added_notification_quantity: {{ 'products.added_notification.quantity' | t | json }},
      products_added_notification_total_price: {{ 'products.added_notification.total_price' | t | json }},
      products_added_notification_subtotal: {{ 'products.added_notification.subtotal' | t | json }},
      products_added_notification_shipping_note: {{ 'products.added_notification.shipping_note' | t | json }},
      products_added_notification_keep_shopping: {{ 'products.added_notification.keep_shopping' | t | json }},
      products_added_notification_cart: {{ 'products.added_notification.cart' | t | json }},
      products_product_adding_to_cart: {{ 'products.product.adding_to_cart' | t | json }},
      products_product_added_to_cart: {{ 'products.product.added_to_cart' | t | json }},
      products_added_notification_subtotal: {{ 'products.added_notification.subtotal' | t | json }}
    };
    theme.routes = {
      search_url: '{{ routes.search_url }}',
      cart_url: '{{ routes.cart_url }}',
      cart_add_url: '{{ routes.cart_add_url }}',
      cart_change_url: '{{ routes.cart_change_url }}'
    };
    document.documentElement.className = document.documentElement.className.replace('no-js', '');
  </script>
  <script>
    var pathname = window.location.pathname;
    var pathnameLowerCase = pathname.toLowerCase();
    if (pathnameLowerCase.search('zh-cn') == '1') {
    	window.location.replace('https://sanaexpert.tmall.hk/');
    } else if (pathname === '/es') {
      setTimeout(function() {
        $( '.slideshow' ).slick('slickGoTo', 3);
      }, 300);
    }
  </script>

  <!-- Facebook 4.9.3 -->
  <!-- <meta name="facebook-domain-verification" content="ewbbhc3p5y0zjaetpfp9v6hmtw2iop" /> -->
  <meta name="facebook-domain-verification" content="lc3e11zw41p41141lkncny63jhi5x9" />

  {{ content_for_header }}

  {{ 'gang-custom-css-shopify--main.css' | asset_url | stylesheet_tag }}
  {% render 'opinew_head' %}
 
 	  
  <!-- RYVIU APP :: Settings global -->	
      <script> var ryviu_global_settings = {{shop.metafields.ryviu.user_settings }};</script>
  <!-- RYVIU APP -->

  {% include 'dataLayer-allPages' %} 
  {% include 'discount-combine' %}
  {% comment %}
  {% render 'easy-gdpr-settings' %}
  {% render 'bon-loyalty' %}
  {% include 'ac-popups' %}
  {% endcomment %}
  
  <meta name="google-site-verification" content="4Ruxdzp9MZUyiQyoSQxDLN5BW4oWnswuWTW-YehZ9DM" />

  {% render 'gsf-conversion-pixels' %}

  <script defer="defer" type="text/javascript">
      (function(c,l,a,r,i,t,y){
          c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
          t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
          y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
      })(window, document, "clarity", "script", "eck9wf6kq4");
  </script>
  

    <!-- Upsell & Cross Sell - Selleasy by Logbase - Starts -->
      <script src='https://upsell-app.logbase.io/lb-upsell.js?shop=sanaexpert-es.myshopify.com' defer></script>
    <!-- Upsell & Cross Sell - Selleasy by Logbase - Ends -->
  
  {% render 'judgeme_core' %}
</head> 

<body class="template-{{ template | split: '.' | first }}">
  
  <!-- Google Tag Manager (noscript) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KC4TR57"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->
  
  <!-- Google Tag Manager (noscript) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PMTMKFK"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->
  
  <a class="skip-link visually-hidden" href="#content">{{ 'general.accessibility_labels.skip_to_content' | t }}</a>

  {% section 'header' %}
	
  <main id="content" {% if page_title != 'SanaExpert ES' %}class="container-margin {%if page_title == 'Pränatale Übungen' or page_title == 'Haut und Haare' or page_title == 'Essen und Ernährung' or page_title == 'Aus Liebe zur Gesundheit' %}text-align-justify{% endif %}"{% endif %} role="main">
    <div class="container cf">

     <!--LayoutHub-Workspace-Start-->{{ content_for_layout }}<!--LayoutHub-Workspace-End-->

    </div>
  </main>

    {% if page_title == 'SanaExpert ES' or page_title == 'Empresa' %}
      {% section 'form' %}
    {% endif %}
    {% include 'ac-footer' %}
    
  <div>
    {% section 'new-footer' %}
  </div>

  {{ 'vendor.js'  | asset_url | script_tag }}
  {{ 'theme.js'  | asset_url | script_tag }}

  {% comment %}
  {% include "bc_banner" %}
  {%- render 'layouthub_footer' -%} 
  {% include 'smile-initializer' %}
  {% endcomment %}

  {% if content_for_header contains 'fastbundle.co' %}
      {% render 'fast_bundle_service' %}
  {% endif %}
  
  <!-- AC -->  
    <script type="text/javascript">
      (function(e,t,o,n,p,r,i){e.visitorGlobalObjectAlias=n;e[e.visitorGlobalObjectAlias]=e[e.visitorGlobalObjectAlias]||function(){(e[e.visitorGlobalObjectAlias].q=e[e.visitorGlobalObjectAlias].q||[]).push(arguments)};e[e.visitorGlobalObjectAlias].l=(new Date).getTime();r=t.createElement("script");r.src=o;r.async=true;i=t.getElementsByTagName("script")[0];i.parentNode.insertBefore(r,i)})(window,document,"https://diffuser-cdn.app-us1.com/diffuser/diffuser.js","vgo");
      vgo('setAccount', '68108072');
      vgo('setTrackByDefault', true);
  
      vgo('process');
      </script>
  <!-- END AC -->
  
  <style>
    #customer_login > div.action_bottom > a {
    	display: none;
    }
    #customer_orders > div.grid-item.grid__item {
    	display: none;
    }
  </style>
  
  {% section 'app-optimization' %}
  {% include 'appikon-discounts' %}

  <script src="{{ 'util.js' | asset_url }}"></script>
  <script src="{{ 'masonry.js' | asset_url }}"></script>
  <script src="{{ 'swipe-content.js' | asset_url }}"></script>
  <script src="{{ 'draggable-img-gallery.js' | asset_url }}"></script>

  <div style="display:none">
  
    <div id="judgeme_product_reviews" class="jdgm-widget jdgm-review-widget" data-product-title="{{ product.title | escape }}" data-id="{{ product.id }}">
      {{ product.metafields.judgeme.widget }}
    </div>
  </div>
  
  <script>
    var getwd = document.getElementById('judgeme_product_reviews');
    var getplaceholder = document.getElementById('judgeme_widget_placeholder');

    if (getplaceholder)
    {
      getplaceholder.append(getwd);  
    }
    
  </script>
  
	{%- render 'flits_capture_code' with 'load_snippet',template:'flits_snippet' -%}


<!-- Start of sanaexpert-es Zendesk Widget script -->
 <!-- <script id="ze-snippet" src="https://static.zdassets.com/ekr/snippet.js?key=cb188f12-30f1-4ae1-9c9e-007be5ebe001"> </script> -->
<!-- End of sanaexpert-es Zendesk Widget script -->


<div id="sanaexpert-chat-widget">
    <!-- Circle Icon -->
    <div id="sanaexpert-circle-icon" class="circle-icon">
        ¡Hey! ¿Qué necesitas? 😄
    </div>

    <!-- Chat Button -->
    <div id="sanaexpert-chat-button" class="chat-button">
        <img src="https://assets.streamlinehq.com/image/private/w_240,h_240,ar_1/f_auto/v1/icons/chat-bubble/chat-bubble-oval-notification-9sspoyy6jdke0q6z55u01t.png/chat-bubble-oval-notification-lyp5qd8jdlaojh8ha996a.png" style="padding:3px" alt="SanaExpert Chat">
    </div>

    <!-- Chat Container -->
    <div id="sanaexpert-chat-container" class="chat-container">
        <div class="chat-header">
            <img src="https://lps.sanaexpert.de/wp-content/uploads/2022/07/sanaexpert_white.png" alt="SanaExpert Logo" class="header-logo">
            <span style="font-size: medium;">Customer Support</span>
            <button class="close-button">&times;</button>
        </div>
        
        <!-- Contact Options Container -->
        <div id="contact-options-container" class="contact-options-container">
          <img src="https://lps.sanaexpert.de/wp-content/uploads/2022/07/sanaexpert_white.png" alt="SanaExpert Logo" class="header-logo" style="height: 60px; margin-bottom: 10px;">

            <h3 class="options-title">¿Cómo prefieres contactarnos?</h3>
            
            <!-- WhatsApp Button -->
            <a href="https://api.whatsapp.com/send?phone=34621190731" target="_blank" class="contact-option-button whatsapp-button">
                <div class="option-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="contact-svg">
                        <path d="M380.9 97.1C339 55.1 283.2 32 223.9 32c-122.4 0-222 99.6-222 222 0 39.1 10.2 77.3 29.6 111L0 480l117.7-30.9c32.4 17.7 68.9 27 106.1 27h.1c122.3 0 224.1-99.6 224.1-222 0-59.3-25.2-115-67.1-157zm-157 341.6c-33.2 0-65.7-8.9-94-25.7l-6.7-4-69.8 18.3L72 359.2l-4.4-7c-18.5-29.4-28.2-63.3-28.2-98.2 0-101.7 82.8-184.5 184.6-184.5 49.3 0 95.6 19.2 130.4 54.1 34.8 34.9 56.2 81.2 56.1 130.5 0 101.8-84.9 184.6-186.6 184.6zm101.2-138.2c-5.5-2.8-32.8-16.2-37.9-18-5.1-1.9-8.8-2.8-12.5 2.8-3.7 5.6-14.3 18-17.6 21.8-3.2 3.7-6.5 4.2-12 1.4-32.6-16.3-54-29.1-75.5-66-5.7-9.8 5.7-9.1 16.3-30.3 1.8-3.7.9-6.9-.5-9.7-1.4-2.8-12.5-30.1-17.1-41.2-4.5-10.8-9.1-9.3-12.5-9.5-3.2-.2-6.9-.2-10.6-.2-3.7 0-9.7 1.4-14.8 6.9-5.1 5.6-19.4 19-19.4 46.3 0 27.3 19.9 53.7 22.6 57.4 2.8 3.7 39.1 59.7 94.8 83.8 35.2 15.2 49 16.5 66.6 13.9 10.7-1.6 32.8-13.4 37.4-26.4 4.6-13 4.6-24.1 3.2-26.4-1.3-2.5-5-3.9-10.5-6.6z"/>
                    </svg>
                </div>
                <span>WhatsApp</span>
            </a>
            
            <!-- Instagram Button -->
            <a id="instagram-link" href="http://instagram.com/sanaexpert.es" target="_blank" class="contact-option-button instagram-button">
                <div class="option-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="contact-svg">
                        <path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"/>
                    </svg>
                </div>
                <span>Instagram</span>
            </a>

              OR
            <!-- Web Chat Button -->
            <div id="web-chat-button" class="contact-option-button webchat-button">
                <div class="option-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="contact-svg">
                        <path d="M256 32C114.6 32 0 125.1 0 240c0 47.6 19.9 91.2 52.9 126.3C38 405.7 7 439.1 6.5 439.5c-6.6 7-8.4 17.2-4.6 26S14.4 480 24 480c61.5 0 110-25.7 139.1-46.3C192 442.8 223.2 448 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm0 368c-26.7 0-53.1-4.1-78.4-12.1l-22.7-7.2-19.5 13.8c-14.3 10.1-33.9 21.4-57.5 29 7.3-12.1 14.4-25.7 19.9-40.2l10.6-28.1-20.6-21.8C69.7 314.1 48 282.2 48 240c0-88.2 93.3-160 208-160s208 71.8 208 160-93.3 160-208 160z"/>
                    </svg>
                </div>
                <span>Web Chat</span>
            </div>
      </div>
        
        <div class="chat-messages" id="chat-messages">
            <div class="messages-container"></div>
            <div class="loading-dots">
                <span></span><span></span><span></span>
            </div>
        </div>
        <div class="chat-input">
            <input type="text" id="user-input" placeholder="Escribe tu mensaje...">
            <button id="emoji-button" class="emoji-button">☺</button>
            <div id="emoji-picker" class="emoji-picker">
                <div class="emoji-container">
                    <span class="emoji">😊</span>
                    <span class="emoji">😂</span>
                    <span class="emoji">👍</span>
                    <span class="emoji">❤️</span>
                    <span class="emoji">👋</span>
                    <span class="emoji">🙏</span>
                    <span class="emoji">🎉</span>
                    <span class="emoji">👏</span>
                    <span class="emoji">🤔</span>
                    <span class="emoji">😍</span>
                    <span class="emoji">🙂</span>
                    <span class="emoji">😎</span>
                    <span class="emoji">🌿</span>
                    <span class="emoji">💚</span>
                    <span class="emoji">✅</span>
                    <span class="emoji">⭐</span>
                </div>
            </div>
            <button id="send-button">➤</button>
        </div>
    </div>
</div>
</body>

<style>
    /* Circle Icon */
.circle-icon {
    position: fixed;
    bottom: 90px; /* Adjust this value to position it above the chat button */
    right: 20px;
    
    padding: 10px 15px;
    border-radius: 50px;
    color: #007700;
    font-size: 14px;
    background-color: #ffffff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    z-index: 9997; /* Ensure it's below the chat button */
}

/* Add corner tail */
.circle-icon::after {
    content: "  ";
    position: absolute;
    bottom: -7px;
    right: 14px;
    width: 0;
    height: 0;
   border-top: 10px solid #ffffff; /* Same as background */
    border-left: 10px solid transparent;
   /* filter: drop-shadow(0 -1px 1px rgba(0,0,0,0.1)); */
}


/* Pulse Animation */
@keyframes pulse {
    0% {
        transform: scale(0.95);
        box-shadow: 0 0 0 0 rgba(0, 119, 0, 0.3);
    }
    70% {
        transform: scale(1.05);
        box-shadow: 0 0 0 10px rgba(0, 119, 0, 0);
    }
    100% {
        transform: scale(0.95);
        box-shadow: 0 0 0 0 rgba(0, 119, 0, 0);
    }
}

/* Chat Widget Base Styles */
#sanaexpert-chat-widget {
    font-family: 'Segoe UI', Arial, sans-serif;
    line-height: 1.6;
    box-sizing: border-box;
}

#sanaexpert-chat-widget * {
    box-sizing: border-box;
    font-size:medium;
}

/* Chat Button */
.chat-button {
    position: fixed;
    bottom: 15px;
    right: 20px;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background-color: rgb(140, 182, 62);
    box-shadow: 0 3px 15px rgba(0,0,0,0.2);
    cursor: pointer;
    z-index: 9998;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease, background-color 0.3s;
    animation: pulse 2s infinite ease-in-out;
}

.chat-button:hover {
    transform: scale(1.1);
    background-color: rgb(130, 172, 52);
}

.chat-button img {
    width: 35px;
    height: auto;
}

/* Chat Container */
.chat-container {
    position: fixed;
    bottom: 50px;
    right: 90px;
    width: 380px;
    height: calc(100vh - 120px);
    max-height: 700px;
    min-height: 400px;
    background-color: #fff;
    border-radius: 16px;
    box-shadow: 0 5px 30px rgba(0,0,0,0.25);
    z-index: 9999;
    display: none;
    flex-direction: column;
    overflow: hidden;
    transition: all 0.3s ease;
}

/* Contact Options Container */
.contact-options-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 20px;
    background-color: #f9f9f9;
    flex: 1;
    gap: 15px;
  color:#fff;
    overflow-y: auto;
  background: linear-gradient(135deg, rgb(140, 182, 62) 0%, #106800 100%);
}

.options-title {
    color: #fff;
    margin-bottom: 20px;
    text-align: center;
    font-weight: 500;
}

.contact-option-button {
    display: flex;
    align-items: center;
    width: 100%;
    padding: 15px 30px;
    border-radius: 12px;
    border: none;
    cursor: pointer;
    font-weight: 500;
    
    text-decoration: none;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    text-align: center;
    justify-content: center;
    box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    gap: 15px;
  color:#ffffff !important;
}

.contact-option-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.15);
}

.whatsapp-button {
    border:1px solid #eeeeee;

  border-radius: 20px;
  color: #eeeeee;
 
  box-shadow: 0 4px 8px rgba(0, 128, 0, 0.4); /* Green shadow */
  padding: 10px 20px;
  font-weight: bold;
  cursor: pointer;
  display:flex;
  flex-direction:horizontal;
  transition: transform 0.2s, box-shadow 0.2s;
}

.instagram-button {
  border:1px solid #eeeeee;
display:flex;
  flex-direction:horizontal;
  border-radius: 20px;
 
  color: #eeeeee;
  box-shadow: 0 4px 8px rgba(0, 128, 0, 0.4); /* Green shadow */
  padding: 10px 20px;
  font-weight: bold;
  cursor: pointer;
  transition: transform 0.2s, box-shadow 0.2s;
}

.instagram-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(0, 128, 0, 0.5); /* Slightly stronger shadow on hover */
}


.webchat-button {
    border:1px solid #eeeeee;
  
  border-radius: 20px;
  color: #eeeeee;
  box-shadow: 0 4px 8px rgba(0, 128, 0, 0.4); /* Green shadow */
  padding: 10px 28px;
  font-weight: bold;
  cursor: pointer;
  transition: transform 0.2s, box-shadow 0.2s;
}

.option-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
}

.contact-svg {
    width: 100%;
    height: 100%;
    fill: currentColor;
}

/* Chat Header */
.chat-header {
    background: linear-gradient(135deg, rgb(140, 182, 62) 0%, #106800 100%);
    color: #fff;
    padding: 15px;
    border-radius: 16px 16px 0 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
    z-index: 1;
    height: 60px;
    min-height: 60px;
}

.header-logo {
    height: 24px;
}

.close-button {
    background: none;
    border: none;
    color: #fff;
    font-size: x-large !important;
    cursor: pointer;
    padding: 0 5px;
    transition: transform 0.2s ease;
}

.close-button:hover {
    transform: scale(1.1);
}

/* Chat Messages Area */
.chat-messages {
    flex: 1;
    padding: 15px;
    background-color: #f9f9f9;
    position: relative;
    overflow-y: auto;
    overflow-x: hidden;
    height: calc(100% - 120px);
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
    display: none; /* Hide initially */
}

.messages-container {
    display: flex;
    flex-direction: column;
    min-height: min-content;
    gap: 10px;
}

/* Message Styles */
.message {
    max-width: 90%;
    margin-bottom: 15px;
    padding: 12px 16px;
    border-radius: 18px;
    position: relative;
    animation: fadeIn 0.3s ease-in-out;
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
}

.message.user {
    align-self: flex-end;
    background: linear-gradient(135deg, #0d8500 0%, #106800 100%);
    color: #fff;
    margin-left: 10%;
    border-bottom-right-radius: 4px;
}

.message.bot {
    align-self: flex-start;
    background-color: #fff;
    color: #333;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    margin-right: 10%;
    border-bottom-left-radius: 4px;
}

/* Loading Animation */
.loading-dots {
    display: none;
    padding: 10px 15px;
    margin-bottom: 15px;
    background-color: #fff;
    border-radius: 18px;
    border-bottom-left-radius: 4px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    width: fit-content;
    align-self: flex-start;
}

.loading-dots span {
    display: inline-block;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #0d8500;
    margin: 0 3px;
    opacity: 0;
    animation: loadingDots 1.4s infinite;
}

.loading-dots span:nth-child(2) {
    animation-delay: 0.2s;
}

.loading-dots span:nth-child(3) {
    animation-delay: 0.4s;
}

/* Chat Input Area */
.chat-input {
    display: none; /* Hide initially */
    padding: 10px;
    background-color: #fff;
    border-top: 1px solid #eee;
    position: relative;
    z-index: 1;
    height: 60px;
    min-height: 60px;
    align-items: center;
}

.chat-input input {
    flex: 1;
    padding: 10px 15px;
    border: 1px solid #ddd;
    border-radius: 24px;
    outline: none;
    font-size: small !important;
    transition: all 0.3s ease;
    height: 40px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.05);
}

.chat-input input:focus {
    border-color: #0d8500;
    box-shadow: 0 0 0 2px rgba(13,133,0,0.1);
}

.chat-input input::placeholder {
    color: #999;
}

/* Emoji Button and Picker */
.emoji-button {
    background: none;
    color: #0d8500;
    border: none;
    font-size: x-large !important;
    cursor: pointer;
    margin: 0 4px;
    padding: 5px;
    border-radius: 50%;
    transition: transform 0.2s;
    height: 40px;
    width: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.emoji-button:hover {
    transform: scale(1.1);
    background-color: #f0f0f0;
}

.emoji-picker {
    position: absolute;
    bottom: 65px;
    right: 70px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 3px 15px rgba(0,0,0,0.2);
    padding: 10px;
    display: none;
    z-index: 9999;
    width: 220px;
}

.emoji-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
}

.emoji {
    font-size: 20px;
    padding: 10px;
    text-align: center;
    cursor: pointer;
    border-radius: 8px;
    transition: all 0.2s;
}

.emoji:hover {
    background-color: #f0f0f0;
    transform: scale(1.1);
}

.chat-input button#send-button {
    padding: 10px 20px;
    background: linear-gradient(135deg, rgb(140, 182, 62) 0%, #106800 100%);
    color: #fff;
    border: none;
    border-radius: 24px;
    cursor: pointer;
    transition: all 0.3s ease;
    height: 40px;
    white-space: nowrap;
    font-weight: 500;
    box-shadow: 0 2px 5px rgba(13,133,0,0.2);
}

.chat-input button#send-button:hover {
    background: linear-gradient(135deg, #0b7000 0%, #0c5000 100%);
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(13,133,0,0.3);
}

.chat-input button:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
}

/* Formatted Content Styles */
.formatted-content {
    font-family: 'Segoe UI', Arial, sans-serif;
    line-height: 1.6;
}

.section {
    margin: 10px 0;
    padding: 8px 12px;
    border-radius: 8px;
}

.section-title {
    color: #0d8500;
    font-weight: bold;
    margin-bottom: 5px;
}

.bullet-list, .number-list {
    margin: 5px 0 5px 20px;
    padding: 0;
}

.bullet-item, .number-item {
    margin: 3px 0;
    position: relative;
}

.highlight {
    background: #e8f5e9;
    padding: 4px 8px;
    border-radius: 4px;
    display: inline-block;
}

/* Source Attribution */
.source {
    font-size: x-small !important;
    color: #666;
    margin-top: 5px;
    font-style: italic;
    text-align: right;
}
.bot-below {
    font-size: 10px;
    color: #666;
    margin-top: 5px;
    font-style: italic;
    text-align: right;
}

/* Link Styles */
.message a {
    color: #0d8500;
    text-decoration: none;
    word-break: break-all;
}

.message.user a {
    color: #ffffff;
    text-decoration: underline;
}

/* Animations */
@keyframes fadeIn {
    from { 
        opacity: 0; 
        transform: translateY(10px); 
    }
    to { 
        opacity: 1; 
        transform: translateY(0); 
    }
}

@keyframes loadingDots {
    0% {
        opacity: 0;
        transform: scale(0.5);
    }
    50% {
        opacity: 1;
        transform: scale(1.2);
    }
    100% {
        opacity: 0;
        transform: scale(0.5);
    }
}

/* Mobile Responsiveness */
@media (max-width: 480px) {
    .chat-container {
        width: 92%;
        height: calc(100vh - 180px);
        max-height: none;
        right: 4%;
        left: 4%;
        bottom: 70px;
    }
    
    .chat-button {
        width: 50px;
        height: 50px;
        bottom: 10px;
        right: 10px;
    }
    
    .chat-messages {
        height: calc(100% - 120px);
    }
    
    .chat-button img {
        width: 30px;
    }
    
    .message {
        max-width: 85%;
    }
    
    .chat-input button {
        padding: 10px 15px;
    }
    
    .emoji-picker {
        right: 15px;
        width: 200px;
    }
    
    .contact-option-button {
        padding: 12px 15px;
    }
}

/* Scrollbar Styling */
.chat-messages::-webkit-scrollbar {
    width: 6px;
}

.chat-messages::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
}

.chat-messages::-webkit-scrollbar-thumb {
    background: #0d8500;
    border-radius: 3px;
}

.chat-messages::-webkit-scrollbar-thumb:hover {
    background: #086400;
}    

/* Added styles for different screen sizes */
@media (min-height: 800px) {
   
}

@media (max-height: 600px) {
    .chat-container {
        height: calc(100vh - 80px);
        bottom: 70px;
    }
    
    .chat-header {
        height: 50px;
        min-height: 50px;
        padding: 8px 12px;
    }
    
    .chat-input {
        height: 50px;
        min-height: 50px;
    }
    
    .chat-messages {
        height: calc(100% - 100px);
    }
}

/* Landscape mode for mobile */
@media (max-height: 500px) and (orientation: landscape) {
    .chat-container {
        height: calc(100vh - 60px);
        bottom: 50px;
    }
    
    .chat-button {
        width: 40px;
        height: 40px;
        bottom: 5px;
    }
    
    .chat-button img {
        width: 25px;
    }
}

/* Added styles for very large screens */
@media (min-width: 1200px) and (min-height: 1000px) {
    .chat-container {
        width: 400px;
        max-height: 800px;
    }
}
</style>

<style>
/* Quick-reply chips */
.chips-row {
  display:flex; flex-wrap:wrap; gap:8px; margin:6px 0 4px 0;
}
.chip {
  background:#eef8ee; color:#0d8500; border:1px solid #cfe7cf;
  padding:6px 10px; border-radius:9999px; cursor:pointer; font-size:12px;
  transition:transform .1s ease, background .2s ease;
}
.chip:hover { transform:translateY(-1px); background:#e6f3e6; }

/* Actions (link/postback) */
.actions-row {
  display:flex; flex-wrap:wrap; gap:8px; margin:6px 0 2px 0;
}
.action-btn {
  background:#0d8500; color:#fff; border:none; border-radius:10px;
  padding:8px 12px; cursor:pointer; font-size:12px; box-shadow:0 1px 4px rgba(0,0,0,.12);
}
.action-btn.link { background:#106800; }
.action-btn:disabled{opacity:.7; cursor:not-allowed}

/* Carousel */
.carousel {
  display:flex; gap:10px; overflow-x:auto; padding:6px 2px; margin:6px 0;
  scroll-snap-type:x mandatory;
}
.carousel::-webkit-scrollbar { height:6px; }
.carousel::-webkit-scrollbar-thumb { background:#0d8500; border-radius:3px; }
.card {
  min-width:220px; max-width:240px; background:#fff; border-radius:14px;
  box-shadow:0 2px 8px rgba(0,0,0,.08); padding:10px; scroll-snap-align:center;
  display:flex; flex-direction:column; gap:6px;
}
.card img { width:100%; height:140px; object-fit:cover; border-radius:10px; }
.card .title { font-weight:600; font-size:14px; }
.card .subtitle { color:#555; font-size:12px; }
.card .price { font-weight:700; margin-top:2px; }
.card .cta { margin-top:auto; }
.card .cta button {
  width:100%; background:#0d8500; color:#fff; border:none; border-radius:10px;
  padding:8px 10px; cursor:pointer; font-size:12px;
}
</style>


<script>
    var customerEmail = "{{ customer.email | escape }}"; // Ensure it's safe for JavaScript
    var customerName = "{{ customer.first_name | escape }} {{ customer.last_name | escape }}";
</script>

<script>
document.addEventListener('DOMContentLoaded', function () {
  function initChatWidget() {
    // Persist a simple user id
    try {
      let uid = localStorage.getItem('sanaexpert_user_id') || `user_${Math.floor(Math.random() * 1e9)}`;
      localStorage.setItem('sanaexpert_user_id', uid);
    } catch (e) { /* ignore */ }

    // --- Selectors
    const chatContainer = document.getElementById('sanaexpert-chat-container');
    const chatButton = document.getElementById('sanaexpert-chat-button');
    const circleIcon = document.getElementById('sanaexpert-circle-icon');
    const closeButton = document.querySelector('.close-button');
    const messagesContainer = document.querySelector('.messages-container');
    const userInput = document.getElementById('user-input');
    const sendButton = document.getElementById('send-button');
    const loadingDots = document.querySelector('.loading-dots');
    const emojiButton = document.getElementById('emoji-button');
    const emojiPicker = document.getElementById('emoji-picker');
    const emojis = document.querySelectorAll('.emoji');
    const chatMessages = document.querySelector('.chat-messages');
    const contactOptionsContainer = document.getElementById('contact-options-container');
    const webChatButton = document.getElementById('web-chat-button');
    const chatInput = document.querySelector('.chat-input');

    // --- Endpoint chooser
    const HOST = (location.hostname || '').toLowerCase();
    const IS_PURMEO_DE = HOST.includes('purmeo') || HOST.endsWith('purmeo.de');

    const BASE_API = 'https://sanaexpertai.centralindia.cloudapp.azure.com';
    const CHAT_ENDPOINT_DEFAULT = `${BASE_API}/chat`;              // SanaExpert default
    const CHAT_ENDPOINT_PURMEO_DE = `${BASE_API}/chatpurmeo/de`;   // Purmeo DE
    const NUDGE_ENDPOINT_PURMEO_DE = `${BASE_API}/purmeo/de/nudges`;
    const CHAT_ENDPOINT = IS_PURMEO_DE ? CHAT_ENDPOINT_PURMEO_DE : CHAT_ENDPOINT_DEFAULT;

    // --- UI Helpers
    function scrollToBottom() {
      if (chatMessages) chatMessages.scrollTop = chatMessages.scrollHeight;
    }
    function showLoading() { if (loadingDots) { loadingDots.style.display = 'block'; scrollToBottom(); } }
    function hideLoading() { if (loadingDots) loadingDots.style.display = 'none'; }

    // Format bot message (keeps your previous formatting behavior)
    function formatBotMessage(message) {
      if (!message || typeof message !== 'string') return '';
      if (message.trim().startsWith('<')) return message; // already HTML
      let formattedContent = '<div class="formatted-content">';
      let sections = message.split(/(?:\r?\n){2,}/);
      sections.forEach(section => {
        if (!section.trim()) return;
        let lines = section.trim().split('\n');
        let formattedSection = '';
        if (lines[0].match(/^\d+\./)) {
          formattedSection = formatList(lines, 'ol', 'number-item');
        } else if (lines[0].match(/^[-•]/)) {
          formattedSection = formatList(lines, 'ul', 'bullet-item');
        } else if (lines[0].includes(':')) {
          formattedSection = formatTitledSection(lines);
        } else {
          formattedSection = formatParagraph(lines);
        }
        formattedContent += formattedSection;
      });
      formattedContent += '</div>';
      return formattedContent;
    }
    function formatList(lines, tag, className) {
      return `<div class="section"><${tag} class="${tag}-list">` +
        lines.map(line => `<li class="${className}">${formatInlineContent(line.replace(/^\d+\.\s*|[-•]\s*/, ''))}</li>`).join('') +
        `</${tag}></div>`;
    }
    function formatTitledSection(lines) {
      const titleParts = lines[0].split(':');
      const title = titleParts[0];
      let content = titleParts.slice(1).join(':');
      if (lines.length > 1) content += lines.slice(1).join(' ');
      return `<div class="section"><div class="section-title">${title.trim()}</div><div>${formatInlineContent(content.trim())}</div></div>`;
    }
    function formatParagraph(lines) {
      return `<div class="section">${formatInlineContent(lines.join(' ').trim())}</div>`;
    }
    function formatInlineContent(text) {
      return (text || '')
        .replace(/€\d+(?:[.,]\d{2})?/g, m => `<span class="highlight">${m}</span>`)
        .replace(/\*(.*?)\*/g, '<strong>$1</strong>')
        .replace(/(https?:\/\/[^\s]+)/g, '<a href="$1" target="_blank" rel="noopener">$1</a>');
    }

    function appendMessage(sender, message, showAttribution = false) {
      const el = document.createElement('div');
      el.className = `message ${sender}`;
      el.innerHTML = sender === 'bot' ? formatBotMessage(message) : message;
      if (showAttribution) {
        const src = document.createElement('div');
        src.className = 'source';
        src.textContent = 'Generated by AI';
        el.appendChild(src);
      }
      messagesContainer.appendChild(el);
      scrollToBottom();
    }

    // --- JSON UI renderers
    function appendBotJson(payload) {
      try {
        const bubble = document.createElement('div');
        bubble.className = 'message bot';

        // 1) message text
        const safeText = (payload && payload.message) ? String(payload.message) : '';
        bubble.innerHTML = formatBotMessage(safeText || ' ');

        // 2) chips
        const chips = payload?.ui?.chips;
        if (Array.isArray(chips) && chips.length) {
          const row = document.createElement('div'); row.className = 'chips-row';
          chips.slice(0, 8).forEach(ch => {
            const btn = document.createElement('button');
            btn.className = 'chip'; btn.type = 'button'; btn.textContent = String(ch);
            btn.addEventListener('click', () => sendMessage(String(ch)));
            row.appendChild(btn);
          });
          bubble.appendChild(row);
        }

        // 3) actions
        const actions = payload?.ui?.actions;
        if (Array.isArray(actions) && actions.length) {
          const row = document.createElement('div'); row.className = 'actions-row';
          actions.slice(0, 5).forEach(a => {
            const type = (a && a.type) || 'postback';
            const label = (a && a.label) || 'Aktion';
            const url = a && a.url;
            const payloadVal = a && a.payload;
            const btn = document.createElement('button');
            btn.className = 'action-btn ' + (type === 'link' ? 'link' : 'postback');
            btn.type = 'button';
            btn.textContent = String(label);
            if (type === 'link' && url) {
              btn.addEventListener('click', () => window.open(String(url), '_blank'));
            } else {
              btn.addEventListener('click', () => sendMessage(String(payloadVal || label)));
            }
            row.appendChild(btn);
          });
          bubble.appendChild(row);
        }

        // 4) carousels
        const carousels = payload?.ui?.carousels;
        if (Array.isArray(carousels) && carousels.length) {
          carousels.forEach(c => {
            const wrap = document.createElement('div'); wrap.className = 'carousel';
            (c.items || []).slice(0, 10).forEach(item => {
              const card = document.createElement('div'); card.className = 'card';
              if (item.image) {
                const img = document.createElement('img'); img.src = String(item.image); img.alt = String(item.title || '');
                card.appendChild(img);
              }
              if (item.title) {
                const t = document.createElement('div'); t.className = 'title'; t.textContent = String(item.title);
                card.appendChild(t);
              }
              if (item.subtitle) {
                const st = document.createElement('div'); st.className = 'subtitle'; st.textContent = String(item.subtitle);
                card.appendChild(st);
              }
              if (item.price) {
                const p = document.createElement('div'); p.className = 'price'; p.textContent = String(item.price);
                card.appendChild(p);
              }
              if (item.cta && item.cta.label) {
                const ctaWrap = document.createElement('div'); ctaWrap.className = 'cta';
                const btn = document.createElement('button'); btn.type = 'button'; btn.textContent = String(item.cta.label);
                btn.addEventListener('click', () => sendMessage(String(item.cta.payload || item.cta.label)));
                ctaWrap.appendChild(btn);
                card.appendChild(ctaWrap);
              }
              wrap.appendChild(card);
            });
            bubble.appendChild(wrap);
          });
        }

        messagesContainer.appendChild(bubble);
        scrollToBottom();
      } catch (e) {
        appendMessage('bot', 'Entschuldigung, etwas ist schiefgelaufen.');
      }
    }

    // --- Chat open/close
    function toggleChat() {
      if (circleIcon) circleIcon.style.display = 'none';
      const isOpen = chatContainer && chatContainer.style.display === 'flex';
      if (isOpen) {
        chatContainer.style.display = 'none';
      } else {
        chatContainer.style.display = 'flex';
        if (contactOptionsContainer) contactOptionsContainer.style.display = 'flex';
        if (chatMessages) chatMessages.style.display = 'none';
        if (chatInput) chatInput.style.display = 'none';
      }
    }
    function startWebChat() {
      if (contactOptionsContainer) contactOptionsContainer.style.display = 'none';
      if (chatMessages) chatMessages.style.display = 'block';
      if (chatInput) chatInput.style.display = 'flex';

      // First greeting only
      if (messagesContainer && messagesContainer.children.length === 0) {
        if (IS_PURMEO_DE) {
          // Rich greeting with starter chips (optional)
          appendBotJson({
            message: "Hallo! Ich bin dein Purmeo Support. Wobei darf ich helfen?",
            ui: {
              chips: ["Bestellung verfolgen", "Produkte ansehen", "Rückgabe starten", "Kontakt aufnehmen"],
              actions: [],
              carousels: []
            }
          });
        } else {
          appendMessage('bot', "Hola, soy María de SanaExpert. 🌿 ¿Cómo puedo ayudarte hoy?");
        }
      }
      startNudgePolling();
    }

    if (chatButton) chatButton.addEventListener('click', toggleChat);
    if (circleIcon) circleIcon.addEventListener('click', toggleChat);
    if (closeButton) closeButton.addEventListener('click', () => chatContainer && (chatContainer.style.display = 'none'));
    if (webChatButton) webChatButton.addEventListener('click', startWebChat);

    // --- Emoji picker
    if (emojiButton) {
      emojiButton.addEventListener('click', function (e) {
        e.stopPropagation();
        if (!emojiPicker) return;
        emojiPicker.style.display = emojiPicker.style.display === 'block' ? 'none' : 'block';
      });
    }
    document.addEventListener('click', function (e) {
      if (emojiPicker && !emojiPicker.contains(e.target) && e.target !== emojiButton) {
        emojiPicker.style.display = 'none';
      }
    });
    emojis.forEach(emoji => {
      emoji.addEventListener('click', function () {
        if (!userInput) return;
        userInput.value = (userInput.value || '') + this.textContent;
        userInput.focus();
      });
    });

    // --- Nudge polling (Purmeo DE only)
    let nudgeTimer = null;
    function startNudgePolling() {
      if (!IS_PURMEO_DE) return;
      try {
        const userId = localStorage.getItem('sanaexpert_user_id');
        if (!userId) return;
        if (nudgeTimer) clearInterval(nudgeTimer);
        nudgeTimer = setInterval(() => {
          fetch(`${NUDGE_ENDPOINT_PURMEO_DE}?user_id=${encodeURIComponent(userId)}`)
            .then(r => r.ok ? r.json() : null)
            .then(data => {
              if (data && Array.isArray(data.nudges) && data.nudges.length) {
                data.nudges.forEach(n => appendBotJson(n));
              }
            })
            .catch(() => { /* ignore */ });
        }, 25000);
      } catch (e) { /* ignore */ }
    }

    // --- Send Message (supports plain text or postback/chip text)
    function sendMessage(forcedText) {
      if (!userInput || !sendButton) return;

      const text = (typeof forcedText === 'string')
        ? forcedText.trim()
        : (userInput.value || '').trim();

      if (!text) return;

      userInput.disabled = true;
      sendButton.disabled = true;

      appendMessage('user', text);
      userInput.value = '';
      showLoading();

      const currentUrl = window.location.href;
      const xhr = new XMLHttpRequest();
      xhr.open('POST', CHAT_ENDPOINT);
      xhr.setRequestHeader('Content-Type', 'application/json');
      xhr.onload = function () {
        hideLoading();
        userInput.disabled = false;
        sendButton.disabled = false;
        userInput.focus();
        if (xhr.status === 200) {
          try {
            const json = JSON.parse(xhr.responseText);
            // Backward compatibility: { response: "..." }
            if (json && typeof json.response === 'string') {
              appendMessage('bot', json.response, true);
            } else if (json && (json.message || json.ui)) {
              appendBotJson(json);
            } else {
              appendMessage('bot', IS_PURMEO_DE ? 'Entschuldigung, etwas ist schiefgelaufen.' : 'Sorry, something went wrong.');
            }
          } catch (e) {
            appendMessage('bot', IS_PURMEO_DE ? 'Entschuldigung, etwas ist schiefgelaufen.' : 'Sorry, something went wrong.');
          }
        } else {
          appendMessage('bot', IS_PURMEO_DE ? 'Entschuldigung, etwas ist schiefgelaufen.' : 'Sorry, something went wrong.');
        }
      };
      xhr.onerror = function () {
        hideLoading();
        userInput.disabled = false;
        sendButton.disabled = false;
        appendMessage('bot', IS_PURMEO_DE ? 'Entschuldigung, etwas ist schiefgelaufen.' : 'Sorry, something went wrong.');
      };

      try {
        const userId = localStorage.getItem('sanaexpert_user_id');
        xhr.send(JSON.stringify({
          user_id: userId,
          message: text,
          cemail: typeof customerEmail !== 'undefined' ? customerEmail : null,
          cname: typeof customerName !== 'undefined' ? customerName : null,
          page_url: currentUrl
        }));
      } catch (e) {
        hideLoading();
        userInput.disabled = false;
        sendButton.disabled = false;
        appendMessage('bot', IS_PURMEO_DE ? 'Entschuldigung, etwas ist schiefgelaufen.' : 'Sorry, something went wrong.');
      }
    }

    // Expose for chips/actions inside this scope
    window.__sana_sendMessage = sendMessage;

    // Event bindings
    if (sendButton) sendButton.addEventListener('click', () => sendMessage());
    if (userInput) {
      userInput.addEventListener('keypress', function (e) {
        if (e.key === 'Enter' && !e.shiftKey) {
          e.preventDefault();
          sendMessage();
        }
      });
    }
  }

  // Boot
  initChatWidget();
});
</script>


<!-- <script src="https://customized-whatsapp-widget.chatarmin.com/widget-fetcher.js?w_id=68076cd555ff32e4bbc37698&u_id=67fe91c8f1ab774560fb3204" async ></script> -->
</html>

